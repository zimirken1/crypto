{"ast":null,"code":"var _jsxFileName = \"/Users/alexrumyantsev/WebstormProjects/cryptocur/src/components/CryptList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { cryptAPI } from \"../services/CryptService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ITEMS_PER_PAGE = 10;\nconst CryptList = () => {\n  _s();\n  const [page, setPage] = useState(1);\n  const {\n    data: cryptocurrencies,\n    error,\n    isLoading\n  } = cryptAPI.useGetCryptocurrenciesQuery({\n    limit: ITEMS_PER_PAGE,\n    offset: (page - 1) * ITEMS_PER_PAGE\n  });\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 27\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Error fetching data\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: page === 1,\n        onClick: () => setPage(prev => prev - 1),\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: page\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setPage(prev => prev + 1),\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n_s(CryptList, \"V32UT6+m5CAv+1QDR9x4p6OWFgQ=\", false, function () {\n  return [cryptAPI.useGetCryptocurrenciesQuery];\n});\n_c = CryptList;\nexport default CryptList;\nvar _c;\n$RefreshReg$(_c, \"CryptList\");","map":{"version":3,"names":["React","useState","cryptAPI","jsxDEV","_jsxDEV","ITEMS_PER_PAGE","CryptList","_s","page","setPage","data","cryptocurrencies","error","isLoading","useGetCryptocurrenciesQuery","limit","offset","children","fileName","_jsxFileName","lineNumber","columnNumber","disabled","onClick","prev","_c","$RefreshReg$"],"sources":["/Users/alexrumyantsev/WebstormProjects/cryptocur/src/components/CryptList.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport {ICrypt} from \"../models/ICrypt\";\nimport {cryptAPI} from \"../services/CryptService\";\n\nconst ITEMS_PER_PAGE = 10;\n\nconst CryptList: React.FC = () => {\n    const [page, setPage] = useState(1);\n    const { data: cryptocurrencies, error, isLoading } = cryptAPI.useGetCryptocurrenciesQuery({ limit: ITEMS_PER_PAGE, offset: (page - 1) * ITEMS_PER_PAGE });\n\n    if (isLoading) return <div>Loading...</div>;\n    if (error) return <div>Error fetching data</div>;\n\n    return (\n        <div>\n            <table>\n                {/* ... ваш код таблицы ... */}\n            </table>\n            <div>\n                <button disabled={page === 1} onClick={() => setPage(prev => prev - 1)}>Previous</button>\n                <span>{page}</span>\n                <button onClick={() => setPage(prev => prev + 1)}>Next</button>\n            </div>\n        </div>\n    );\n};\n\nexport default CryptList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,SAAQC,QAAQ,QAAO,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,cAAc,GAAG,EAAE;AAEzB,MAAMC,SAAmB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAM;IAAES,IAAI,EAAEC,gBAAgB;IAAEC,KAAK;IAAEC;EAAU,CAAC,GAAGX,QAAQ,CAACY,2BAA2B,CAAC;IAAEC,KAAK,EAAEV,cAAc;IAAEW,MAAM,EAAE,CAACR,IAAI,GAAG,CAAC,IAAIH;EAAe,CAAC,CAAC;EAEzJ,IAAIQ,SAAS,EAAE,oBAAOT,OAAA;IAAAa,QAAA,EAAK;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAC3C,IAAIT,KAAK,EAAE,oBAAOR,OAAA;IAAAa,QAAA,EAAK;EAAmB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAEhD,oBACIjB,OAAA;IAAAa,QAAA,gBACIb,OAAA;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEO,CAAC,eACRjB,OAAA;MAAAa,QAAA,gBACIb,OAAA;QAAQkB,QAAQ,EAAEd,IAAI,KAAK,CAAE;QAACe,OAAO,EAAEA,CAAA,KAAMd,OAAO,CAACe,IAAI,IAAIA,IAAI,GAAG,CAAC,CAAE;QAAAP,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACzFjB,OAAA;QAAAa,QAAA,EAAOT;MAAI;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACnBjB,OAAA;QAAQmB,OAAO,EAAEA,CAAA,KAAMd,OAAO,CAACe,IAAI,IAAIA,IAAI,GAAG,CAAC,CAAE;QAAAP,QAAA,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9D,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACd,EAAA,CAnBID,SAAmB;EAAA,QAEgCJ,QAAQ,CAACY,2BAA2B;AAAA;AAAAW,EAAA,GAFvFnB,SAAmB;AAqBzB,eAAeA,SAAS;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}