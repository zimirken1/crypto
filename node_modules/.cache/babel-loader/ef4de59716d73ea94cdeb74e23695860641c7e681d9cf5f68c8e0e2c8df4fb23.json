{"ast":null,"code":"import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/dist/query/react\";\nexport const cryptAPI = createApi({\n  reducerPath: 'cryptAPI',\n  baseQuery: fetchBaseQuery({\n    baseUrl: 'https://api.coincap.io'\n  }),\n  tagTypes: ['Crypt'],\n  endpoints: build => ({\n    getCryptocurrencies: build.query({\n      query: ({\n        limit = 10,\n        offset = 0,\n        search\n      }) => {\n        let params = {\n          limit: limit,\n          offset: offset\n        };\n        if (search) {\n          params.search = search;\n        }\n        return {\n          url: `v2/assets`,\n          params: params\n        };\n      },\n      providesTags: result => ['Crypt']\n    })\n  })\n});","map":{"version":3,"names":["createApi","fetchBaseQuery","cryptAPI","reducerPath","baseQuery","baseUrl","tagTypes","endpoints","build","getCryptocurrencies","query","limit","offset","search","params","url","providesTags","result"],"sources":["/Users/alexrumyantsev/WebstormProjects/cryptocur/src/services/CryptService.ts"],"sourcesContent":["import {createApi, fetchBaseQuery} from \"@reduxjs/toolkit/dist/query/react\";\nimport {ICryptResponse} from \"../models/ICrypt\";\n\nexport const cryptAPI = createApi({\n    reducerPath: 'cryptAPI',\n    baseQuery: fetchBaseQuery({baseUrl: 'https://api.coincap.io'}),\n    tagTypes: ['Crypt'],\n    endpoints: (build) => ({\n        getCryptocurrencies: build.query<ICryptResponse, { limit: number, offset: number, search?: string }>({\n            query: ({ limit = 10, offset = 0, search}) => {\n                let params: any = {\n                    limit: limit,\n                    offset: offset,\n                };\n\n                if (search) {\n                    params.search = search;\n                }\n\n                return {\n                    url: `v2/assets`,\n                    params: params,\n                };\n            },\n            providesTags: result => ['Crypt']\n        }),\n    })\n});\n"],"mappings":"AAAA,SAAQA,SAAS,EAAEC,cAAc,QAAO,mCAAmC;AAG3E,OAAO,MAAMC,QAAQ,GAAGF,SAAS,CAAC;EAC9BG,WAAW,EAAE,UAAU;EACvBC,SAAS,EAAEH,cAAc,CAAC;IAACI,OAAO,EAAE;EAAwB,CAAC,CAAC;EAC9DC,QAAQ,EAAE,CAAC,OAAO,CAAC;EACnBC,SAAS,EAAGC,KAAK,KAAM;IACnBC,mBAAmB,EAAED,KAAK,CAACE,KAAK,CAAqE;MACjGA,KAAK,EAAEA,CAAC;QAAEC,KAAK,GAAG,EAAE;QAAEC,MAAM,GAAG,CAAC;QAAEC;MAAM,CAAC,KAAK;QAC1C,IAAIC,MAAW,GAAG;UACdH,KAAK,EAAEA,KAAK;UACZC,MAAM,EAAEA;QACZ,CAAC;QAED,IAAIC,MAAM,EAAE;UACRC,MAAM,CAACD,MAAM,GAAGA,MAAM;QAC1B;QAEA,OAAO;UACHE,GAAG,EAAG,WAAU;UAChBD,MAAM,EAAEA;QACZ,CAAC;MACL,CAAC;MACDE,YAAY,EAAEC,MAAM,IAAI,CAAC,OAAO;IACpC,CAAC;EACL,CAAC;AACL,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}