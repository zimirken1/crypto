{"ast":null,"code":"import { combineReducers, configureStore } from \"@reduxjs/toolkit\";\nimport { cryptAPI } from \"../services/CryptService\";\nconst rootReducer = combineReducers({\n  [cryptAPI.reducerPath]: cryptAPI.reducer\n});\nexport const setupStore = () => {\n  return configureStore({\n    reducer: rootReducer,\n    middleware: getDefaultMiddleware => getDefaultMiddleware().concat(cryptAPI.middleware)\n  });\n};","map":{"version":3,"names":["combineReducers","configureStore","cryptAPI","rootReducer","reducerPath","reducer","setupStore","middleware","getDefaultMiddleware","concat"],"sources":["/Users/alexrumyantsev/WebstormProjects/cryptocur/src/store/store.ts"],"sourcesContent":["import {combineReducers, configureStore} from \"@reduxjs/toolkit\";\nimport {cryptAPI} from \"../services/CryptService\";\n\nconst rootReducer = combineReducers({\n    [cryptAPI.reducerPath]: cryptAPI.reducer\n})\n\nexport const setupStore = () => {\n    return configureStore({\n        reducer: rootReducer,\n        middleware: (getDefaultMiddleware) =>\n            getDefaultMiddleware().concat(cryptAPI.middleware)\n    })\n}\n\nexport type RootState = ReturnType<typeof rootReducer>\nexport type AppStore = ReturnType<typeof setupStore>\nexport type AppDispatch = AppStore['dispatch']"],"mappings":"AAAA,SAAQA,eAAe,EAAEC,cAAc,QAAO,kBAAkB;AAChE,SAAQC,QAAQ,QAAO,0BAA0B;AAEjD,MAAMC,WAAW,GAAGH,eAAe,CAAC;EAChC,CAACE,QAAQ,CAACE,WAAW,GAAGF,QAAQ,CAACG;AACrC,CAAC,CAAC;AAEF,OAAO,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAC5B,OAAOL,cAAc,CAAC;IAClBI,OAAO,EAAEF,WAAW;IACpBI,UAAU,EAAGC,oBAAoB,IAC7BA,oBAAoB,CAAC,CAAC,CAACC,MAAM,CAACP,QAAQ,CAACK,UAAU;EACzD,CAAC,CAAC;AACN,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}