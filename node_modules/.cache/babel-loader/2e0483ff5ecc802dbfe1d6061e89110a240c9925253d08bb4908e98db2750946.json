{"ast":null,"code":"var _jsxFileName = \"/Users/alexrumyantsev/WebstormProjects/cryptocur/src/components/CryptList.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { cryptAPI } from \"../services/CryptService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CryptList = () => {\n  _s();\n  const {\n    data: crypto,\n    error,\n    isLoading\n  } = cryptAPI.useGetCryptocurrenciesQuery(10);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [isLoading && /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u0418\\u0434\\u0451\\u0442 \\u0437\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 31\n      }, this), error && /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 27\n      }, this), crypto && crypto.map(crypt => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [crypt.id, \" \", crypt.name, \" \", crypt.symbol]\n      }, crypt.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n};\n_s(CryptList, \"J3LwkOVwXWHLjkdoMAXyYGvGefI=\", false, function () {\n  return [cryptAPI.useGetCryptocurrenciesQuery];\n});\n_c = CryptList;\nexport default CryptList;\nvar _c;\n$RefreshReg$(_c, \"CryptList\");","map":{"version":3,"names":["React","cryptAPI","jsxDEV","_jsxDEV","CryptList","_s","data","crypto","error","isLoading","useGetCryptocurrenciesQuery","children","fileName","_jsxFileName","lineNumber","columnNumber","map","crypt","id","name","symbol","_c","$RefreshReg$"],"sources":["/Users/alexrumyantsev/WebstormProjects/cryptocur/src/components/CryptList.tsx"],"sourcesContent":["import React from 'react';\nimport {ICrypt} from \"../models/ICrypt\";\nimport {cryptAPI} from \"../services/CryptService\";\n\nconst CryptList: React.FC = () => {\n    const {data: crypto, error, isLoading} = cryptAPI.useGetCryptocurrenciesQuery(10);\n\n    return (\n        <div>\n            <ul>\n                {isLoading && <h1>Идёт загрузка...</h1>}\n                {error && <h1>Ошибка</h1>}\n                {crypto && crypto.map(crypt =>\n                    <li key={crypt.id}>{crypt.id} {crypt.name} {crypt.symbol}</li>\n                )}\n            </ul>\n        </div>\n    );\n};\n\nexport default CryptList;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAAQC,QAAQ,QAAO,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,SAAmB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM;IAACC,IAAI,EAAEC,MAAM;IAAEC,KAAK;IAAEC;EAAS,CAAC,GAAGR,QAAQ,CAACS,2BAA2B,CAAC,EAAE,CAAC;EAEjF,oBACIP,OAAA;IAAAQ,QAAA,eACIR,OAAA;MAAAQ,QAAA,GACKF,SAAS,iBAAIN,OAAA;QAAAQ,QAAA,EAAI;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACtCP,KAAK,iBAAIL,OAAA;QAAAQ,QAAA,EAAI;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACxBR,MAAM,IAAIA,MAAM,CAACS,GAAG,CAACC,KAAK,iBACvBd,OAAA;QAAAQ,QAAA,GAAoBM,KAAK,CAACC,EAAE,EAAC,GAAC,EAACD,KAAK,CAACE,IAAI,EAAC,GAAC,EAACF,KAAK,CAACG,MAAM;MAAA,GAA/CH,KAAK,CAACC,EAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA4C,CACjE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd,CAAC;AAACV,EAAA,CAdID,SAAmB;EAAA,QACoBH,QAAQ,CAACS,2BAA2B;AAAA;AAAAW,EAAA,GAD3EjB,SAAmB;AAgBzB,eAAeA,SAAS;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}