{"ast":null,"code":"var _jsxFileName = \"/Users/alexrumyantsev/WebstormProjects/cryptocur/src/components/CryptList.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CryptList = () => {\n  _s();\n  const {\n    data,\n    error,\n    isLoading\n  } = useGetCryptocurrenciesQuery(10); // Например, получаем топ-10 криптовалют\n\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 27\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 23\n  }, this);\n  if (!data) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: data.map(crypto => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [crypto.name, \" (\", crypto.symbol, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u0420\\u0430\\u043D\\u0433: \", crypto.rank]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u041A\\u0430\\u043F\\u0438\\u0442\\u0430\\u043B\\u0438\\u0437\\u0430\\u0446\\u0438\\u044F: $\", crypto.marketCapUsd.toLocaleString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u0426\\u0435\\u043D\\u0430: $\", crypto.priceUsd.toLocaleString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0435\\u043D\\u0438\\u0435 \\u0437\\u0430 24 \\u0447\\u0430\\u0441\\u0430: \", crypto.changePercent24Hr.toFixed(2), \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 21\n      }, this)]\n    }, crypto.rank, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n};\n_s(CryptList, \"rYJmv+7IeQ9FfpUA/UenaBCJczk=\", true);\n_c = CryptList;\nexport default CryptList;\nvar _c;\n$RefreshReg$(_c, \"CryptList\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","CryptList","_s","data","error","isLoading","useGetCryptocurrenciesQuery","children","fileName","_jsxFileName","lineNumber","columnNumber","message","map","crypto","name","symbol","rank","marketCapUsd","toLocaleString","priceUsd","changePercent24Hr","toFixed","_c","$RefreshReg$"],"sources":["/Users/alexrumyantsev/WebstormProjects/cryptocur/src/components/CryptList.tsx"],"sourcesContent":["import React from 'react';\nimport {ICrypt} from \"../models/ICrypt\";\nimport {cryptAPI} from \"../services/CryptService\";\n\nconst CryptList: React.FC = () => {\n    const { data, error, isLoading } = useGetCryptocurrenciesQuery(10);  // Например, получаем топ-10 криптовалют\n\n    if (isLoading) return <div>Загрузка...</div>;\n    if (error) return <div>Ошибка: {error.message}</div>;\n    if (!data) return null;\n\n    return (\n        <div>\n            {data.map((crypto: ICrypt) => (\n                <div key={crypto.rank}>\n                    <h4>{crypto.name} ({crypto.symbol})</h4>\n                    <p>Ранг: {crypto.rank}</p>\n                    <p>Капитализация: ${crypto.marketCapUsd.toLocaleString()}</p>\n                    <p>Цена: ${crypto.priceUsd.toLocaleString()}</p>\n                    <p>Изменение за 24 часа: {crypto.changePercent24Hr.toFixed(2)}%</p>\n                </div>\n            ))}\n        </div>\n    );\n}\n\nexport default CryptList;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAI1B,MAAMC,SAAmB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM;IAAEC,IAAI;IAAEC,KAAK;IAAEC;EAAU,CAAC,GAAGC,2BAA2B,CAAC,EAAE,CAAC,CAAC,CAAE;;EAErE,IAAID,SAAS,EAAE,oBAAOL,OAAA;IAAAO,QAAA,EAAK;EAAW;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAC5C,IAAIP,KAAK,EAAE,oBAAOJ,OAAA;IAAAO,QAAA,GAAK,wCAAQ,EAACH,KAAK,CAACQ,OAAO;EAAA;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;EACpD,IAAI,CAACR,IAAI,EAAE,OAAO,IAAI;EAEtB,oBACIH,OAAA;IAAAO,QAAA,EACKJ,IAAI,CAACU,GAAG,CAAEC,MAAc,iBACrBd,OAAA;MAAAO,QAAA,gBACIP,OAAA;QAAAO,QAAA,GAAKO,MAAM,CAACC,IAAI,EAAC,IAAE,EAACD,MAAM,CAACE,MAAM,EAAC,GAAC;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxCX,OAAA;QAAAO,QAAA,GAAG,4BAAM,EAACO,MAAM,CAACG,IAAI;MAAA;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC1BX,OAAA;QAAAO,QAAA,GAAG,mFAAgB,EAACO,MAAM,CAACI,YAAY,CAACC,cAAc,CAAC,CAAC;MAAA;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC7DX,OAAA;QAAAO,QAAA,GAAG,6BAAO,EAACO,MAAM,CAACM,QAAQ,CAACD,cAAc,CAAC,CAAC;MAAA;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAChDX,OAAA;QAAAO,QAAA,GAAG,mGAAsB,EAACO,MAAM,CAACO,iBAAiB,CAACC,OAAO,CAAC,CAAC,CAAC,EAAC,GAAC;MAAA;QAAAd,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA,GAL7DG,MAAM,CAACG,IAAI;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAMhB,CACR;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAAAT,EAAA,CApBKD,SAAmB;AAAAsB,EAAA,GAAnBtB,SAAmB;AAsBzB,eAAeA,SAAS;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}