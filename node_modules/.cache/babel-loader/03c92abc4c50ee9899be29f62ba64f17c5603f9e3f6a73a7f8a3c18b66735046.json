{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nexport const useSort = props => {\n  _s();\n  const [sortOrder, setSortOrder] = useState('none');\n  const [sortBy, setSortBy] = useState((props === null || props === void 0 ? void 0 : props.initialSortBy) || 'none');\n  const sortFunction = sortKey => (a, b) => {\n    if (sortOrder === 'none' || sortBy === 'none') return 0;\n    const valueA = parseFloat(a[sortKey] || 0);\n    const valueB = parseFloat(b[sortKey] || 0);\n    return sortOrder === 'ascending' ? valueA - valueB : valueB - valueA;\n  };\n  const toggleSortOrder = column => {\n    if (sortBy !== column) {\n      setSortBy(column);\n      setSortOrder('ascending');\n    } else {\n      setSortOrder(prev => prev === 'ascending' ? 'descending' : 'ascending');\n    }\n  };\n  return {\n    sortOrder,\n    sortBy,\n    toggleSortOrder,\n    sortFunction\n  };\n};\n_s(useSort, \"zLfGb0Xd7RcRoSJrAONn+GfUOsk=\");","map":{"version":3,"names":["useState","useSort","props","_s","sortOrder","setSortOrder","sortBy","setSortBy","initialSortBy","sortFunction","sortKey","a","b","valueA","parseFloat","valueB","toggleSortOrder","column","prev"],"sources":["/Users/alexrumyantsev/WebstormProjects/cryptocur/src/hooks/useSort.ts"],"sourcesContent":["import { useState } from 'react';\n\ntype SortOrder = 'ascending' | 'descending' | 'none';\ntype SortBy = 'price' | 'marketCap' | 'change' | 'none';\n\ninterface UseSortProps<T> {\n    initialSortBy?: SortBy;\n}\n\nexport const useSort = <T extends object>(props?: UseSortProps<T>) => {\n    const [sortOrder, setSortOrder] = useState<SortOrder>('none');\n    const [sortBy, setSortBy] = useState<SortBy>(props?.initialSortBy || 'none');\n\n    const sortFunction = (sortKey: keyof T) => (a: T, b: T): number => {\n        if (sortOrder === 'none' || sortBy === 'none') return 0;\n\n        const valueA = parseFloat((a[sortKey] || 0) as unknown as string);\n        const valueB = parseFloat((b[sortKey] || 0) as unknown as string);\n\n        return sortOrder === 'ascending' ? valueA - valueB : valueB - valueA;\n    };\n\n    const toggleSortOrder = (column: SortBy) => {\n        if (sortBy !== column) {\n            setSortBy(column);\n            setSortOrder('ascending');\n        } else {\n            setSortOrder(prev => prev === 'ascending' ? 'descending' : 'ascending');\n        }\n    };\n\n    return { sortOrder, sortBy, toggleSortOrder, sortFunction };\n};\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAShC,OAAO,MAAMC,OAAO,GAAsBC,KAAuB,IAAK;EAAAC,EAAA;EAClE,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGL,QAAQ,CAAY,MAAM,CAAC;EAC7D,MAAM,CAACM,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAS,CAAAE,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEM,aAAa,KAAI,MAAM,CAAC;EAE5E,MAAMC,YAAY,GAAIC,OAAgB,IAAK,CAACC,CAAI,EAAEC,CAAI,KAAa;IAC/D,IAAIR,SAAS,KAAK,MAAM,IAAIE,MAAM,KAAK,MAAM,EAAE,OAAO,CAAC;IAEvD,MAAMO,MAAM,GAAGC,UAAU,CAAEH,CAAC,CAACD,OAAO,CAAC,IAAI,CAAuB,CAAC;IACjE,MAAMK,MAAM,GAAGD,UAAU,CAAEF,CAAC,CAACF,OAAO,CAAC,IAAI,CAAuB,CAAC;IAEjE,OAAON,SAAS,KAAK,WAAW,GAAGS,MAAM,GAAGE,MAAM,GAAGA,MAAM,GAAGF,MAAM;EACxE,CAAC;EAED,MAAMG,eAAe,GAAIC,MAAc,IAAK;IACxC,IAAIX,MAAM,KAAKW,MAAM,EAAE;MACnBV,SAAS,CAACU,MAAM,CAAC;MACjBZ,YAAY,CAAC,WAAW,CAAC;IAC7B,CAAC,MAAM;MACHA,YAAY,CAACa,IAAI,IAAIA,IAAI,KAAK,WAAW,GAAG,YAAY,GAAG,WAAW,CAAC;IAC3E;EACJ,CAAC;EAED,OAAO;IAAEd,SAAS;IAAEE,MAAM;IAAEU,eAAe;IAAEP;EAAa,CAAC;AAC/D,CAAC;AAACN,EAAA,CAvBWF,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}